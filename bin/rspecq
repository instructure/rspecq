#!/usr/bin/env ruby
require "rspecq"

config = RSpecQ::Configuration.new(ARGV)

Sentry.init if ENV['SENTRY_DSN']

if config.report?
  reporter = RSpecQ::Reporter.new(
    build_id: config.build,
    timeout: config.report_timeout,
    redis_opts: config.redis_opts,
    queue_wait_timeout: config.queue_wait_timeout
  )

  reporter.report
else
  worker = RSpecQ::Worker.new(
    build_id: config.build,
    worker_id: config.worker,
    redis_opts: config.redis_opts
  )

  worker.files_or_dirs_to_run = config.files_or_dirs_to_run if config.files_or_dirs_to_run
  worker.rspec_args = config.rspec_args
  worker.populate_timings = config.timings
  worker.file_split_threshold = config.file_split_threshold
  worker.max_requeues = config.max_requeues
  worker.queue_wait_timeout = config.queue_wait_timeout
  worker.fail_fast = config.fail_fast
  worker.junit_output = config.junit_output
  worker.seed = config.seed if config.seed
  worker.reproduction = config.reproduction
  worker.work
end
